name: "sample application"

x-type: "hlfv1"

description: "Sample Network"

version: "1.0"


channels:
  templatechannel:
    orderers:
      - orderer.example.com

    # Required. list of peers from participating orgs
    peers:
      peer0.packagerBosch.example.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true


#
# list of participating organizations in this network
#
organizations:
  PackagerBosch:
    mspid: PackagerBoschMSP

    peers:
      - peer0.packagerBosch.example.com

    # [Optional]. Certificate Authorities issue certificates for identification purposes in a Fabric based
    # network. Typically certificates provisioning is done in a separate process outside of the
    # runtime network. Fabric-CA is a special certificate authority that provides a REST APIs for
    # dynamic certificate management (enroll, revoke, re-enroll). The following section is only for
    # Fabric-CA servers.
    certificateAuthorities:
      - ca-packagerBosch

    # [Optional]. If the application is going to make requests that are reserved to organization
    # administrators, including creating/updating channels, installing/instantiating chaincodes, it
    # must have access to the admin identity represented by the private key and signing certificate.
    # Both properties can be the PEM string or local path to the PEM file. Note that this is mainly for
    # convenience in development mode, production systems should not expose sensitive information
    # this way. The SDK should allow applications to set the org admin identity via APIs, and only use
    # this route as an alternative when it exists.
    adminPrivateKey:
      path: artifacts/crypto-config/peerOrganizations/packagerBosch.example.com/users/Admin@packagerBosch.example.com/msp/keystore/cd2c14e3c1d6f9f5ccca42d0c7c2d4f2820c3c536f9d36960cc7ef9a6678ba18_sk
    signedCert:
      path: artifacts/crypto-config/peerOrganizations/packagerBosch.example.com/users/Admin@packagerBosch.example.com/msp/signcerts/Admin@packagerBosch.example.com-cert.pem

#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  orderer.example.com:
    url: grpcs://localhost:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer.example.com

    tlsCACerts:
      path: artifacts/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  peer0.packagerBosch.example.com:
    # this URL is used to send endorsement and query requests
    url: grpcs://localhost:7051

    grpcOptions:
      ssl-target-name-override: peer0.packagerBosch.example.com
    tlsCACerts:
      path: artifacts/crypto-config/peerOrganizations/packagerBosch.example.com/peers/peer0.packagerBosch.example.com/tls/ca.crt

#
# Fabric-CA is a special kind of Certificate Authority provided by Hyperledger Fabric which allows
# certificate management to be done via REST APIs. Application may choose to use a standard
# Certificate Authority instead of Fabric-CA, in which case this section would not be specified.
#
certificateAuthorities:
  ca-packagerBosch:
    url: https://localhost:7054
    # the properties specified under this object are passed to the 'http' client verbatim when
    # making the request to the Fabric-CA server
    httpOptions:
      verify: false
    tlsCACerts:
      path: artifacts/crypto-config/peerOrganizations/packagerBosch.example.com/ca/ca.packagerBosch.example.com-cert.pem

    # Fabric-CA supports dynamic user enrollment via REST APIs. A "root" user, a.k.a registrar, is
    # needed to enroll and invoke new users.
    registrar:
      - enrollId: admin
        enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ca-packagerBosch